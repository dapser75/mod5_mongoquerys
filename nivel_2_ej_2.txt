//ejercicios modulo 2 bbdd mongodb NIVEL 2
db.restaurants.find({ "grades.grade": "A", "borough": { $ne: "Brooklyn" }, "cuisine": { $ne: "American " } }, {}).sort({ "cuisine": -1})  //1
db.getCollection("restaurants").find({ "name":{$regex:/^Wil.*/,$options:"m"}}, { "_id": 1, "borough": 1, "cuisine": 1,"name":1})     //2
db.getCollection("restaurants").find({ "name":{$regex:/.*ces$/,$options:"m"}}, { "_id": 1, "borough": 1, "cuisine": 1,"name":1}) //3
db.getCollection("restaurants").find({ "name":{$regex:/.*Reg/,$options:"m"}}, { "_id": 1, "borough": 1, "cuisine": 1,"name":1})   //4
db.getCollection("restaurants").find({$and:[{"borough": "Bronx"}, {$or:[{"cuisine": "American "},{"cuisine":"chinesse"}]}]}, {})  //5
db.getCollection("restaurants").find({ "borough": "Bronx", $or: [ { "cuisine": /.*chinese.*/i }, { "cuisine": /.*american.*/i } ] }, {})
db.getCollection("restaurants").find({ $or: [{borough:"Staten Island"},{borough:"Queens"},{borough:"Bronx"}, {borough:"Brooklyn"}]  }, {_id:0, restaurant_id:1,name:1,borough:1,cuisine:1}) //6
db.getCollection("restaurants").find({ $nor: [{borough:"Staten Island"},{borough:"Queens"},{borough:"Bronx"}, {borough:"Brooklyn"}]  }, {_id:0, restaurant_id:1,name:1,borough:1,cuisine:1}) //7
FALTA !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
db.getCollection("restaurants").find({ "cuisine": /.*seafood.*/i, $nor: [ { "cuisine": /.*chinese.*/i }, { "cuisine": /.*american.*/i }, { "name": /^wil.*/i } ] }, { "name": 1, "cuisine": 1, "borough": 1, "_id": 0}) //9
db.restaurants.find({grades:{$elemMatch:{score: 11, grade: "A",date:ISODate("2014-08-11T00:00:00Z")}}},{restaurant_id:1,_id:0,name:1,grades:1}).pretty() //10











